{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/movies.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","API_URL","getMoviesByTitle","a","fetch","respons","json","FindMovie","React","memo","addMovie","hasMovie","useState","setMovie","setTitle","error","setError","findedMovie","Title","Plot","Poster","imdbID","useEffect","htmlFor","type","id","placeholder","value","onChange","useCallback","target","onClick","disabled","App","data","setMovies","currentMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1655e2fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MovieCard.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const MovieCard = ({\r\n  title,\r\n  description = '',\r\n  imgUrl,\r\n  imdbUrl,\r\n}) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({\r\n  movies = [],\r\n}) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imdbId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","const API_KEY = '9b42833c';\nconst API_URL = 'https://www.omdbapi.com/';\n\nexport async function getMoviesByTitle(title) {\n  const respons = await fetch(`${API_URL}?apikey=${API_KEY}&t=${title}`);\n\n  return respons.json();\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMoviesByTitle } from '../../api/movies';\n\nexport const FindMovie = React.memo(({ addMovie, hasMovie }) => {\n  const [movie, setMovie] = useState(null);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => setError(null), [title]);\n\n  async function getMovie() {\n    const findedMovie = await getMoviesByTitle(title);\n\n    if (!findedMovie.Title) {\n      setError('Can\\'t find a movie with such a title');\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie({\n      title: findedMovie.Title,\n      description: findedMovie.Plot,\n      imgUrl: findedMovie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${findedMovie.imdbID}`,\n      imdbId: findedMovie.imdbID,\n    });\n  }\n\n  function handleSubmit() {\n    if (hasMovie(movie)) {\n      setError('Already have this movie');\n\n      return;\n    }\n\n    addMovie(movie);\n    setTitle('');\n    setMovie(null);\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={title}\n              className=\"input\"\n              onChange={useCallback(\n                ({ target }) => setTitle(target.value),\n                [],\n              )}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              {error}\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={handleSubmit}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n});\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  hasMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  function addMovie(movie) {\n    setMovies(currentMovies => [...currentMovies, movie]);\n  }\n\n  function hasMovie(movie) {\n    return movies.some(({ imdbId }) => imdbId === movie.imdbId);\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} hasMovie={hasMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}